femgeom
=======

author: Ondrej Certik <ondrej@certik.cz>
homepage: http://code.google.com/p/femgeom/

Geometry utilities for FEM modeling. The goal of this project is to enable this
procedure:

1. Create a geometry (currently only in gmsh) and specify geometry entities,
i.e. regions (insulator, electrode, air) and boundaries (surface1, surface2).

2. Import the geometry and entities in femgeom. 

    g=geom.read_gmsh("/tmp/x.geo")

3. Mesh the geometry.

    geom.write_tetgen(g,"/tmp/t.smesh")
    os.system("~/fzu/mesh/tetgen -pqQ -a0.01 /tmp/t.smesh")

4. Export the mesh in any format (gmsh, libmesh,...) and list all the entities
together with elements that belong to it and faces of elements if applicable
(surfaces).

    m=mesh()
    geom.read_tetgen(m,"/tmp/t.1")
    m.writemsh("/tmp/t12.msh")
    m.writexda("/tmp/in.xda")


That's all. So the input is a geometry+entities, output is a mesh+elements (and
facets) numbers belonging to each entity. Femgeom should handle the rest. In
you FEM code, you just load the mesh and in the assembly part, you assign a
different parameter to different region (by using the element numbers femgeom
tells you) and assign boundary conditions (by using the element numbers and
sides of each element on boundary).

Current capabilities:
====================

geometry import:
    - gmsh

geometry export:
    - comsol (former femlab), there are bugs in it (and in comsol)
    - tetgen

mesh import:
    - tetgen

mesh export:
    - libmesh
    - gmsh

other:
    - a reusable 2d polygon partitioning submodule

future plans:
    source code of tetgen can be freely downloaded, but it is not open source,
    so I'll try to use netgen as well (it's probably not as good as tetgen, but
    it's opensource) - but the thing is not only to properly handle the mesh
    itself, but also the entities. Also having some other geometry import
    besides gmsh would be fine. Also add export to gmsh.

Testing
-------

py.test

Usage
-----

Prerequisites:

apt-get install python-pyparsing


Create a geometry in gmsh, convert to tetgen, run tetgen, convert mesh to
libmesh, assembly & solve.

Example
-------

cd example
./convert.py

this meshes a gmsh geometry.
